<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="jp.co.ginga.infra.repository.reservation.ReservationRepository">
	<resultMap
		type="jp.co.ginga.infra.repository.reservation.ReservationEntity"
		id="reservation">

		<id property="reservationId" column="reservation_id" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="insertDate" column="insert_date" />
		<result property="updateDate" column="update_date" />
		<association property="facilityEntity"
			javaType="jp.co.ginga.infra.repository.facility.FacilityEntity">
			<id property="facilityId" column="facility_id" />
			<result property="name" column="faciName" />
		</association>
		<association property="insertUserEntity"
			javaType="jp.co.ginga.infra.repository.user.UserEntity">
			<id property="userId" column="user_id" />
		</association>
		<association property="updateUserEntity"
			javaType="jp.co.ginga.infra.repository.user.UserEntity">
			<id property="userId" column="user_id" />
		</association>

	</resultMap>

	<select id="findOneById" resultMap="reservation">
		select
		reservation_id
		,re.facility_id
		,faci.name as facility_name
		,start_time::DATE
		,end_time
		,re.user_id as insert_user_id
		,user1.user_name as
		insert_user_name
		,re.insert_date as insert_date
		,re.update_user_id as
		update_user_id
		,user2.user_name as update_user_name
		,re.update_date as
		update_date


		from
		m_reservation as re

		left outer join
		m_user as user1
		on
		re.user_id =
		user1.user_id

		left outer join
		m_user as user2
		on
		re.update_user_id =
		user2.user_id

		left outer join
		m_facility as faci
		on
		re.facility_id =
		faci.facility_id

		where
		reservation_id =
		#{reservationId}
		order by
		reservation_id asc
		;
	</select>

	<select id="findByFacilityIdAndStartDateBetween"
		resultMap="reservation">
		<!-- TO_CHAR(start_time,'YYYY/MM/DD HH:MM:SS') -->
		select
		reservation_id
		,re.facility_id
		,faci.name as
		facility_name
		,start_time
		,end_time
		,re.user_id as insert_user_id
		,user1.user_name as
		insert_user_name
		,re.insert_date as insert_date
		,re.update_user_id as
		update_user_id
		,user2.user_name as
		update_user_name
		,re.update_date as
		update_date

		from
		m_reservation as re

		left outer join
		m_user as user1
		on
		re.user_id = user1.user_id

		left outer
		join
		m_user as user2
		on
		re.update_user_id = user2.user_id

		left outer join
		m_facility as faci
		on
		re.facility_id = faci.facility_id

		where
		re.start_time
		BETWEEN
		#{startTime} AND #{endTime}
		and
		re.facility_id =
		#{facilityId}
		order by
		re.start_time asc
		;

	</select>

	<select id="canMakeReservation" resultType="int">
		select
		count(reservation_id)
		from m_reservation
		where
		facility_id =
		#{facilityId}
		and #{startTime} &lt; end_time
		and #{endTime} &gt;
		start_time
		<!-- group byとorder byがあると0じゃなくnullが返ってきてしまい、intじゃなくlong型にしないといけなくなる -->
		<!-- 今回はカウント数だけを返すからgroup byとorder by入らない -->
		;
	</select>

	<select id="findStartEnd" resultMap="reservation">
		select
		m_facility.facility_id
		,m_facility.name
		as faciName
		,reservation_id
		,start_time
		,end_time
		from
		m_reservation
		left join
		m_facility
		on
		m_reservation.facility_id =
		m_facility.facility_id
		where
		m_facility.facility_id =
		#{facilityId};
	</select>

	<select id="findReservationId" resultMap="reservation">
		select
		reservation_id
		from
		m_reservation
		where
		facility_id =
		#{facilityId} and
		start_time =
		#{startTime} and
		end_time =
		#{endTime} ;

	</select>

	<insert id="insert">
		insert into m_reservation(
		start_time
		,end_time
		,facility_id
		,insert_date
		,user_id
		) values (
		#{startTime}
		,#{endTime}
		,#{facilityEntity.facilityId}
		,NOW()
		,#{insertUserEntity.userId}
		);
	</insert>

	<update id="update">
		update m_reservation set
		<if test="startTime != null">
			start_time=#{startTime}
		</if>
		<if test="endTime != null">
			,end_time=#{endTime}
		</if>
		<if test="facilityEntity.facilityId != null">
			,facility_id=#{facilityEntity.facilityId}
		</if>

		,update_date=NOW()
		<if test="insertUserEntity.userId != null">
			,update_user_id=#{insertUserEntity.userId}
		</if>

		where reservation_id =
		#{reservationId}
		;
	</update>

	<delete id="delete">
		delete from m_reservation
		where
		reservation_id=#{reservationId}
		;
	</delete>

	<select id="getReservationId" resultMap="reservation">
		select
		reservation_id
		,start_time
		,end_time
		,m_facility.facility_id
		,m_facility.name
		as faciName
		from
		m_reservation
		left join
		m_facility
		on
		m_reservation.facility_id
		=
		m_facility.facility_id
		where
		reservation_id =
		#{reservationId}
		;

	</select>
</mapper>